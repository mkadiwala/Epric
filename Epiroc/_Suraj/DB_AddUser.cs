///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Epiroc._Suraj
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The DB_AddUser recording.
    /// </summary>
    [TestModule("bc17d11f-553d-4b8a-bdc9-75777af78a2b", ModuleType.Recording, 1)]
    public partial class DB_AddUser : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Epiroc.EpirocRepository repository.
        /// </summary>
        public static global::Epiroc.EpirocRepository repo = global::Epiroc.EpirocRepository.Instance;

        static DB_AddUser instance = new DB_AddUser();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public DB_AddUser()
        {
            FirstName = "Mubin";
            LastName = "Kadiwala";
            Age = "35";
            Gender = "Male";
            Category = "Testing";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static DB_AddUser Instance
        {
            get { return instance; }
        }

#region Variables

        string _FirstName;

        /// <summary>
        /// Gets or sets the value of variable FirstName.
        /// </summary>
        [TestVariable("d09b2bfb-9f9b-41ae-884b-424ade220127")]
        public string FirstName
        {
            get { return _FirstName; }
            set { _FirstName = value; }
        }

        string _LastName;

        /// <summary>
        /// Gets or sets the value of variable LastName.
        /// </summary>
        [TestVariable("48fc5954-3b36-4430-bba7-d8198e22f42c")]
        public string LastName
        {
            get { return _LastName; }
            set { _LastName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Category.
        /// </summary>
        [TestVariable("847c6c5e-4812-48a5-9ba4-9fea61cc5b1e")]
        public string Category
        {
            get { return repo.Category; }
            set { repo.Category = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Gender.
        /// </summary>
        [TestVariable("cd86a25b-6945-4967-a424-e81ca9b9ff81")]
        public string Gender
        {
            get { return repo.Gender; }
            set { repo.Gender = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable Age.
        /// </summary>
        [TestVariable("d5746ad9-7f19-48dc-81e2-e22cc4a44390")]
        public string Age
        {
            get { return repo.Age; }
            set { repo.Age = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DemoApp.Login.FirstName' at 65;13.", repo.DemoApp.Login.FirstNameInfo, new RecordItemIndex(0));
            repo.DemoApp.Login.FirstName.Click("65;13");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$FirstName' with focus on 'DemoApp.Login.FirstName'.", repo.DemoApp.Login.FirstNameInfo, new RecordItemIndex(1));
            repo.DemoApp.Login.FirstName.PressKeys(FirstName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DemoApp.Login.LastName' at 26;15.", repo.DemoApp.Login.LastNameInfo, new RecordItemIndex(2));
            repo.DemoApp.Login.LastName.Click("26;15");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$LastName' with focus on 'DemoApp.Login.LastName'.", repo.DemoApp.Login.LastNameInfo, new RecordItemIndex(3));
            repo.DemoApp.Login.LastName.PressKeys(LastName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TabStandard.Open' at Center.", repo.TabStandard.OpenInfo, new RecordItemIndex(4));
            repo.TabStandard.Open.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'List1000.Testing' at 99;9.", repo.List1000.TestingInfo, new RecordItemIndex(5));
            repo.List1000.Testing.Click("99;9");
            Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left DoubleClick item 'TabStandard.Age' at 36;6.", repo.TabStandard.AgeInfo, new RecordItemIndex(6));
            //repo.TabStandard.Age.DoubleClick("36;6");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'TabStandard.Age'.", repo.TabStandard.AgeInfo, new RecordItemIndex(7));
            Keyboard.PrepareFocus(repo.TabStandard.Age);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Age' with focus on 'TabStandard.Age'.", repo.TabStandard.AgeInfo, new RecordItemIndex(8));
            repo.TabStandard.Age.PressKeys(Age);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'TabStandard.RdbMale' at Center.", repo.TabStandard.RdbMaleInfo, new RecordItemIndex(9));
            repo.TabStandard.RdbMale.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DemoApp.BtnAddPerson' at 44;6.", repo.DemoApp.BtnAddPersonInfo, new RecordItemIndex(10));
            repo.DemoApp.BtnAddPerson.Click("44;6");
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
