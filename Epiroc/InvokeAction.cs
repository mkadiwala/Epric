///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Epiroc
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InvokeAction recording.
    /// </summary>
    [TestModule("5d022a50-9ac9-4e82-b0a2-89b51815d06f", ModuleType.Recording, 1)]
    public partial class InvokeAction : ITestModule
    {
        /// <summary>
        /// Holds an instance of the EpirocRepository repository.
        /// </summary>
        public static EpirocRepository repo = EpirocRepository.Instance;

        static InvokeAction instance = new InvokeAction();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InvokeAction()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InvokeAction Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Website", "Opening web site 'https://www.w3schools.com/howto/howto_css_user_rating.asp' with browser 'IE' in normal mode.", new RecordItemIndex(0));
            //Host.Current.OpenBrowser("https://www.w3schools.com/howto/howto_css_user_rating.asp", "IE", "", false, false, false, false, false, true);
            //Delay.Milliseconds(100);
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='How TO - User Rating') on item 'HowToCreateAUserRatingScorecard.Main.SomeH1Tag'.", repo.HowToCreateAUserRatingScorecard.Main.SomeH1TagInfo, new RecordItemIndex(1));
            //Validate.AttributeEqual(repo.HowToCreateAUserRatingScorecard.Main.SomeH1TagInfo, "InnerText", "How TO - User Rating");
            //Delay.Milliseconds(100);
            
            //Report.Snapshot(ReportLevel.Info, "User", "", repo.HowToCreateAUserRatingScorecard.Main.SomeH1Tag, new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HowToCreateAUserRatingScorecard.Main.NextBtn' at Center.", repo.HowToCreateAUserRatingScorecard.Main.NextBtnInfo, new RecordItemIndex(3));
            repo.HowToCreateAUserRatingScorecard.Main.NextBtn.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HowToCreateAUserRatingScorecard.Main.W3ButtonW3Green' at Center.", repo.HowToCreateAUserRatingScorecard.Main.W3ButtonW3GreenInfo, new RecordItemIndex(4));
            repo.HowToCreateAUserRatingScorecard.Main.W3ButtonW3Green.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(5));
            Delay.Duration(5000, false);
            
            //Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HowToCreateAUserRatingScorecard.Overlay' at 1473;323.", repo.HowToCreateAUserRatingScorecard.OverlayInfo, new RecordItemIndex(6));
            //repo.HowToCreateAUserRatingScorecard.Overlay.Click("1473;323");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Invoke action", "Invoking PerformClick() on item 'HowToCreateAUserRatingScorecard.Main.NextBtn'.", repo.HowToCreateAUserRatingScorecard.Main.NextBtnInfo, new RecordItemIndex(7));
            repo.HowToCreateAUserRatingScorecard.Main.NextBtn.PerformClick();
            Delay.Milliseconds(0);
            
            //Report.Screenshot(ReportLevel.Info, "User", "", repo.HowToCreateAUserRatingScorecard.Overlay, false, new RecordItemIndex(8));
            
            //Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='How TO - Contact Chips') on item 'HowToCreateAUserRatingScorecard.Main.SomeH1Tag'.", repo.HowToCreateAUserRatingScorecard.Main.SomeH1TagInfo, new RecordItemIndex(9));
            //Validate.AttributeEqual(repo.HowToCreateAUserRatingScorecard.Main.SomeH1TagInfo, "InnerText", "How TO - Contact Chips");
            //Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HowToCreateAUserRatingScorecard.Main.PreviousBtn' at Center.", repo.HowToCreateAUserRatingScorecard.Main.PreviousBtnInfo, new RecordItemIndex(10));
            repo.HowToCreateAUserRatingScorecard.Main.PreviousBtn.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 1s.", new RecordItemIndex(11));
            Delay.Duration(1000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'HowToCreateAUserRatingScorecard.Main.PreviousBtn' at Center.", repo.HowToCreateAUserRatingScorecard.Main.PreviousBtnInfo, new RecordItemIndex(12));
            repo.HowToCreateAUserRatingScorecard.Main.PreviousBtn.Click();
            Delay.Milliseconds(0);
            
            //Report.Screenshot(ReportLevel.Info, "User", "", repo.HowToCreateAUserRatingScorecard.Self, false, new RecordItemIndex(13));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
